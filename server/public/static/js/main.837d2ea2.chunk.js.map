{"version":3,"sources":["Redux/RequestSlice.js","Redux/StorageSlice.js","Components/InputWithChip.js","Pages/Main.js","Pages/Register.js","Pages/Login.js","Redux/UserManagementSlice.js","Pages/UserManagement.js","Redux/ConfigSlice.js","Redux/UserSlice.js","Pages/Profile.js","App.js","reportWebVitals.js","Theme.js","Redux/Store.js","Services/RequestAdaptor.js","index.js"],"names":["requestSlice","createSlice","name","initialState","jwt","localStorage","getItem","auth","method","route","data","response","reducers","login","state","action","payload","register","verify","list_user","edit_user","remove_user","add_user","setJwt","removeItem","setItem","get_fobject_list","create_folder","remove_fobject","toggle_public_access","change_access","move_fobject","actions","storageSlice","fs","path","current_parent","current","setFs","filter","x","parent","map","Object","objectSpread","checked","menu","downloadValue","cd","complete_path","fid","current_path","item","find","_id","undefined","setDownloadValue","value","toggleSelectItem","findex","findIndex","unSelectAllItems","i","length","toggleMenuItem","toggleAllSelectedItem","ListItem","styled","_ref","margin","theme","spacing","ChipsArray","_ref2","props","esm_extends","chipData","setChipData","_React$useState","React","_React$useState2","slicedToArray","react","InputElement","Input","placeholder","startAdornment","onChange","e","target","onKeyPress","ev","key","preventDefault","indexOf","concat","toConsumableArray","Paper","style","minHeight","sx","display","flexWrap","listStyle","border","borderColor","p","m","mt","overflow","component","itemPlaceholder","Typography","textAlign","width","variant","index","InputWithChip_ListItem","Chip","textOverflow","maxWidth","label","onDelete","searchIndex","new_chip_data","splice","position","top","left","transform","bgcolor","color","borderRadius","Main","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","useSelector","request","user","dispatch","useDispatch","fobjects","storage","_useState","useState","_useState2","anchorEl","setAnchorEl","_useState3","_useState4","selectMode","toggleSelectMode","_useState5","_useState6","modal","toggleModal","_useState7","_useState8","modalType","setModalType","_useState9","_useState10","modalStyle","setModalStyle","_useState11","_useState12","_useState13","_useState14","files","setFiles","_useState15","_useState16","uploadValue","setUploadValue","_useState17","_useState18","chipFiles","setChipFiles","_useState19","public","_useState20","modalData","setModalData","navigate","useNavigate","handle_move","from","to","_selected","selected","push","apply","Set","includes","sid","setTimeout","fids","useEffect","f","new_files","checked_count","forEach","react_default","a","createElement","Fragment","AppBar","Toolbar","backgroundColor","IconButton","onClick","snackbarId","split","path_covrage","check_node","current_depth_parent","Icon","Breadcrumbs","marginLeft","aria-label","separator","fontSize","Link","onDragOver","onDrop","handle_move_by_name","dataTransfer","getData","underline","cursor","handleChangeDir","Box","flexGrow","Modal","open","onClose","Button","size","document","dispatchEvent","Event","persist","aria-labelledby","aria-describedby","onDragLeave","id","FormControl","found","type","multiple","htmlFor","marginTop","marginRight","FormControlLabel","control","Checkbox","params","access","formdata","FormData","append","JSON","stringify","xhr","XMLHttpRequest","onreadystatechange","readyState","responseText","result","parse","snackbar_key","ok","error","upload","onprogress","evt","lengthComputable","progress","Math","ceil","loaded","total","onabort","addEventListener","abort_listener","abort","removeEventListener","setRequestHeader","send","uploadFileHandler","LinearProgress","Grid","container","xl","lg","sm","xs","padding","Card","onDragStart","setData","effectAllowed","ftype","draggable","CardHeader","avatar","Avatar","fitem","responseType","onload","item_uri","URL","createObjectURL","fileLink","href","download","click","downloadFile","CircularProgress","owner","Menu","MenuItem","title","subheader","createdAt","Register","serverResponse","code","setVerify","requested","setRequested","username","password","email","console","log","elevation","TextField","verifyAction","Login","userManagementSlice","setUsers","checkUser","checkAllUser","UserManagement","rows","store","users","saveModal","setSaveModal","identifier","currentUser","setCurrnetUser","removeBtn","setRemoveBtn","selectAll","setSelectAll","Fab","right","bottom","selected_users","usernames","mr","edited","actual_user_index","actual_user","uid","Container","TableContainer","Table","minWidth","TableHead","TableRow","TableCell","checkedIcon","TableBody","row","chagneCheck","ButtonGroup","configSlice","sideMenu","toggleTheme","toggleSideMenu","role","userSlice","setUser","k","hasOwnProperty","Profile","profileData","setProfileData","alignItems","flexDirection","App","thm","config","dispach","handleClose","CssBaseline","edge","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","Drawer","anchor","List","Divider","ListItemButton","ListItemIcon","react_router","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","darkTheme","createTheme","palette","mode","background","default","secondary","primary","text","lightTheme","configureStore","reducer","cslice","uslice","umslice","rslice","sslice","RequestAdaptor","options","headers","content-type","Authorization","body","fetch","res","json","catch","Init","setTheme","ThemeProvider","react_router_dom","notistack_esm","maxSnack","Services_RequestAdaptor","src_App","ReactDOM","createRoot","getElementById","render","StrictMode","es"],"mappings":"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","file":"static/js/main.837d2ea2.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst BASE_URL = \"\";\nexport const requestSlice = createSlice({\n    name: 'request',\n    initialState: {\n        jwt: localStorage.getItem('jwt'),\n        auth: false,\n        method: 'POST',\n        route: \"\",\n        data: {},\n        response: {}\n    },\n    reducers: {\n        login: (state, action) => {\n            state.route = BASE_URL + \"/api/user/login\";\n            state.method = \"POST\";\n            state.auth = false;\n            state.data = action.payload;\n        },\n        register: (state, action) => {\n            state.route = BASE_URL + \"/api/user/register\";\n            state.auth = false;\n            state.method = \"POST\";\n            state.data = action.payload;\n        },\n        verify: (state, action) => {\n            state.route = BASE_URL + \"/api/user/verify\";\n            state.auth = false;\n            state.method = \"POST\";\n            state.data = action.payload;\n        },\n        list_user: (state) => {\n            state.route = BASE_URL + \"/api/user/list\";\n            state.auth = true;\n            state.method = \"POST\";\n            state.data = {};\n        },\n        edit_user: (state, action) => {\n            state.route = BASE_URL + \"/api/user/edit\";\n            state.auth = true;\n            state.method = \"PATCH\";\n            state.data = action.payload;\n        },\n        remove_user: (state, action) => {\n            state.route = BASE_URL + \"/api/user/remove\";\n            state.auth = true;\n            state.method = \"POST\";\n            state.data = action.payload;\n        },\n        add_user: (state, action) => {\n            state.route = BASE_URL + \"/api/user/add\";\n            state.auth = true;\n            state.method = \"POST\";\n            state.data = action.payload;\n        },\n        setJwt: (state, action) => {\n            if (action.payload === null)\n                localStorage.removeItem('jwt');\n            else\n                localStorage.setItem(\"jwt\", action.payload);\n            state.jwt = action.payload\n        },\n        get_fobject_list: (state, action) => {\n            state.route = BASE_URL + \"/api/fobject/list\";\n            state.auth = true;\n            state.method = \"POST\";\n            state.data = {};\n        },\n        create_folder: (state, action) => {\n            state.route = BASE_URL + \"/api/fobject/folder/add\";\n            state.auth = true;\n            state.method = \"POST\";\n            state.data = action.payload\n        },\n        remove_fobject: (state, action) => {\n            state.route = BASE_URL + \"/api/fobject/remove\";\n            state.auth = true;\n            state.method = \"POST\";\n            state.data = action.payload;\n        },\n        toggle_public_access: (state, action) => {\n            state.route = BASE_URL + \"/api/fobject/access/public\";\n            state.auth = true;\n            state.method = \"POST\";\n            state.data = action.payload;\n        },\n        change_access: (state, action) => {\n            state.route = BASE_URL + \"/api/fobject/access/change\";\n            state.auth = true;\n            state.method = \"POST\";\n            state.data = action.payload;\n        },\n        move_fobject:(state,action)=>{\n            state.route = BASE_URL + \"/api/fobject/move\";\n            state.auth = true;\n            state.method = \"POST\";\n            state.data = action.payload;\n        },\n        response: (state, action) => {\n            state.response = action.payload;\n        }\n    },\n})\n\nexport const {\n    setJwt,\n    login,\n    register,\n    response,\n    verify,\n    add_user,\n    edit_user,\n    list_user,\n    remove_user,\n    get_fobject_list,\n    create_folder,\n    remove_fobject,\n    toggle_public_access,\n    change_access,\n    move_fobject\n} = requestSlice.actions\n\nexport default requestSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\n\nexport const storageSlice = createSlice({\n    name: 'storage',\n    initialState: {\n        fs: [],\n        path: \"/\",\n        current_parent: \"/\",\n        current: [],\n    },\n    reducers: {\n        setFs: (state, action) => {\n            state.fs = action.payload;\n            state.current = action.payload.filter(x => x.parent === state.current_parent).map(x => {\n                return { ...x, checked: false, menu: false, downloadValue: 0 }\n            });\n        },\n        cd: (state, action) => {\n            const complete_path = (fid, current_path) => {\n                if (fid === \"/\")\n                    return \"/\";\n                let item = state.fs.find(x => x._id === fid);\n                if (item.parent === \"/\") {\n                    if (current_path === undefined)\n                        return \"/\" + item.name;\n                    else\n                        return \"/\" + item.name + \"/\" + current_path;\n                }\n                else {\n                    if (current_path === undefined)\n                        return complete_path(item.parent, item.name);\n                    else\n                        return complete_path(item.parent, item.name + \"/\" + current_path);\n                }\n            }\n            state.path = complete_path(action.payload);\n            state.current_parent = action.payload;\n            state.current = state.fs.filter(x => x.parent === action.payload).map(x => {\n                return { ...x, checked: false, menu: false, downloadValue: 0 }\n            });\n        },\n        setDownloadValue: (state, action) => {\n            state.current = state.current.map(x => {\n                if (x._id === action.payload.fid) {\n                    x.downloadValue = action.payload.value;\n                }\n                return x;\n            });\n        },\n        toggleSelectItem: (state, action) => {\n            let findex = state.current.findIndex(x => x._id === action.payload.fid);\n            state.current[findex].checked = !state.current[findex].checked\n        },\n        unSelectAllItems: (state) => {\n            for (let i = 0; i < state.current.length; i++)\n                state.current[i].checked = false;\n        },\n        toggleMenuItem: (state, action) => {\n            let findex = state.current.findIndex(x => x._id === action.payload.fid);\n            state.current[findex].menu = !state.current[findex].menu\n        },\n    },\n})\n\nexport const { setFs, toggleMenuItem, toggleSelectItem, cd, toggleAllSelectedItem, unSelectAllItems, setDownloadValue } = storageSlice.actions\n\nexport default storageSlice.reducer","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Chip from '@mui/material/Chip';\nimport Paper from '@mui/material/Paper';\nimport { Input, Typography } from '@mui/material';\n\nconst ListItem = styled('li')(({ theme }) => ({\n  margin: theme.spacing(0.5),\n}));\n\nexport default function ChipsArray({ ...props }) {\n  const { chipData, setChipData } = props;\n  const [item, setItem] = React.useState(\"\");\n  const handleDelete = (searchIndex) => () => {\n    let new_chip_data = [...chipData]\n    new_chip_data.splice(searchIndex, 1)\n    setChipData(new_chip_data);\n  };\n\n  return (\n    <>\n      {\n        props.InputElement ||\n        <Input\n          placeholder={props.placeholder || \"\"}\n          startAdornment={props.startAdornment || null}\n          value={item}\n          onChange={e => setItem(e.target.value)}\n          onKeyPress={(ev) => {\n            if (ev.key === \"Enter\") {\n              ev.preventDefault();\n              if (chipData.indexOf(item) === -1 && item !== \"\")\n                setChipData([...chipData, item])\n              setItem(\"\")\n            }\n          }}\n        />\n      }\n      <Paper\n        style={{\n          minHeight: \"40px\",\n        }}\n        sx={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          listStyle: 'none',\n          border: \"2px dashed\",\n          borderColor: \"background.primary\",\n          p: 0.5,\n          m: 0,\n          mt: 1,\n          overflow: \"hidden\"\n        }}\n        component=\"ul\"\n      >\n\n        {\n          chipData.length === 0\n            ? (props.itemPlaceholder !== undefined && <Typography sx={{ textAlign: \"center\", width: \"100%\" }} variant=\"inherit\" >{props.itemPlaceholder}</Typography>)\n            : chipData.map((data, index) => {\n              return (\n                <ListItem key={index}>\n                  <Chip\n                    sx={{\n                      textOverflow: \"ellipsis\",\n                      maxWidth: \"245px\"\n                    }}\n                    label={data}\n                    onDelete={handleDelete(index)}\n                  />\n                </ListItem>\n              );\n            })}\n      </Paper>\n    </>\n  );\n}","import { AppBar, Autocomplete, Avatar, Breadcrumbs, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Checkbox, Chip, CircularProgress, FormControl, FormControlLabel, FormLabel, Grid, Icon, IconButton, Input, LinearProgress, Link, Menu, MenuItem, Modal, Paper, Toolbar, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useNavigate } from \"react-router-dom\";\nimport { change_access, create_folder, get_fobject_list, move_fobject, remove_fobject, toggle_public_access } from \"../Redux/RequestSlice\";\nimport { cd, setDownloadValue, toggleMenuItem, toggleSelectItem, unSelectAllItems } from \"../Redux/StorageSlice\";\nimport ChipsArray from \"../Components/InputWithChip\";\nimport { useSnackbar } from \"notistack\";\nimport zIndex from \"@mui/material/styles/zIndex\";\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    color: 'text.default',\n    border: '2px solid white',\n    borderRadius: \"15px\",\n    p: 4,\n};\n\nexport default function Main() {\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const jwt = useSelector(state => state.request.jwt);\n    const user = useSelector(state => state.user.data);\n    const dispatch = useDispatch()\n    const fobjects = useSelector(state => state.storage.current);\n    const current_path = useSelector(state => state.storage.path);\n    const parent = useSelector(state => state.storage.current_parent);\n    const fs = useSelector(state => state.storage.fs);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectMode, toggleSelectMode] = useState(false);\n    const [modal, toggleModal] = useState(false);\n    const [modalType, setModalType] = useState(\"\");\n    const [modalStyle, setModalStyle] = useState(style);\n    const [chipData, setChipData] = useState([]);\n    const [files, setFiles] = useState([]);\n    const [uploadValue, setUploadValue] = useState(0);\n    const [chipFiles, setChipFiles] = useState([]);\n    const [modalData, setModalData] = useState({ name: \"\", public: false });\n\n    const navigate = useNavigate();\n    const handle_move = (from, to) => {\n        let selected = [from];\n        if (selectMode)\n            selected.push(...fobjects.filter(x => x.checked).map(x => x._id));\n        selected = [...(new Set(selected))];\n        if (selected.includes(to)) {\n            let sid = enqueueSnackbar(\"can't move one folder to him self\", { variant: \"error\" });\n            setTimeout(() => { closeSnackbar(sid) }, 1000);\n        } else {\n            dispatch(move_fobject({ fids: selected, target: to }))\n        }\n    }\n    const handle_move_by_name = (from, index) => {\n        let path = current_path.split(\"/\");\n        if (index === 0)\n            handle_move(from, \"/\");\n        else {\n            let path_covrage = path.filter((item, i) => index >= i);\n            path_covrage[0] = \"/\";\n            let target = path_covrage[path_covrage.length - 1];\n            let check_node = { name: \"/\", _id: \"/\" }\n            let current_depth_parent = \"/\";\n            let i = 1;\n            while (check_node.name !== target) {\n                check_node = fs.find(x => x.parent === current_depth_parent && x.name === path_covrage[i]);\n                current_depth_parent = check_node._id;\n                i++;\n            }\n            handle_move(from, check_node._id);\n        }\n    }\n    const handleChangeDir = (index) => {\n        let path = current_path.split(\"/\");\n        if (index === 0)\n            dispatch(cd(\"/\"));\n        else {\n            let path_covrage = path.filter((item, i) => index >= i);\n            path_covrage[0] = \"/\";\n            let target = path_covrage[path_covrage.length - 1];\n            let check_node = { name: \"/\", _id: \"/\" }\n            let current_depth_parent = \"/\";\n            let i = 1;\n            while (check_node.name !== target) {\n                check_node = fs.find(x => x.parent === current_depth_parent && x.name === path_covrage[i]);\n                current_depth_parent = check_node._id;\n                i++;\n            }\n            dispatch(cd(check_node._id))\n        }\n    }\n    const handleBackPress = (e) => {\n        if (current_path === \"/\") {\n            let snackbarId = enqueueSnackbar(\"can't going upper than this\");\n            setTimeout(() => {\n                closeSnackbar(snackbarId);\n            }, 1000);\n        }\n        else {\n            let path = current_path.split(\"/\");\n            path.splice(path.length - 1, 1);\n            let path_covrage = path;\n            path_covrage[0] = \"/\";\n            let target = path_covrage[path_covrage.length - 1];\n            let check_node = { name: \"/\", _id: \"/\" }\n            let current_depth_parent = \"/\";\n            let i = 1;\n            while (check_node.name !== target) {\n                check_node = fs.find(x => x.parent === current_depth_parent && x.name === path_covrage[i]);\n                current_depth_parent = check_node._id;\n                i++;\n            }\n            dispatch(cd(check_node._id))\n        }\n    };\n    const onSelectFile = (e) => {\n        let found = -1\n        let new_files = [...e.target.files]\n        new_files.map(f => {\n            if (chipFiles.includes(f.name))\n                found += 1\n        })\n        if (found != -1) {\n            let sid = enqueueSnackbar(\"can't upload 2 file with same name\", { variant: \"warning\" });\n            setTimeout(() => {\n                closeSnackbar(sid);\n            }, 1000);\n        } else {\n            setFiles([...files, ...new_files])\n        }\n        e.target.value = \"\";\n    }\n    const handleChangeAccess = (fitem) => {\n        setChipData(fitem.access);\n        setModalData({ ...modalData, name: fitem._id });\n        setModalType(\"Change Access\");\n        toggleModal(true);\n    };\n    const uploadFileHandler = () => {\n        let formdata = new FormData();\n        formdata.append(\"public\", modalData.public);\n        formdata.append(\"parent\", parent);\n        formdata.append(\"access\", JSON.stringify(chipData));\n        for (let i in files) {\n            formdata.append(\"files\", files[i]);\n        }\n        let xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == 4) {\n                if (xhr.responseText) {\n                    let result = JSON.parse(xhr.responseText);\n                    let snackbar_key = 0;\n                    if (result.ok) {\n                        snackbar_key = enqueueSnackbar(`${files.length} uploaded successfully`, { variant: \"success\" });\n                        dispatch(get_fobject_list());\n                    } else {\n                        if (result.error) {\n                            snackbar_key = enqueueSnackbar(`${result.error}`, { variant: \"error\" });\n                        } else\n                            snackbar_key = enqueueSnackbar(`failed to upload all items`, { variant: \"error\" });\n                        dispatch(get_fobject_list());\n                    }\n                    toggleModal(false);\n                    setTimeout(() => closeSnackbar(snackbar_key), 1000);\n\n                }\n            }\n        }\n        xhr.open('POST', \"/api/fobject/file/add\", true);\n        xhr.upload.onprogress = function (evt) {\n            if (evt.lengthComputable) {\n                let progress = Math.ceil((evt.loaded / evt.total) * 100);\n                setUploadValue(progress);\n            }\n        };\n        xhr.onabort = (e) => {\n            let sid = enqueueSnackbar(\"upload aborted\", { variant: \"warning\" });\n            setTimeout(() => closeSnackbar(sid), 1000);\n            setUploadValue(0);\n        };\n        let abort_listener = (e) => {\n            xhr.abort();\n            document.removeEventListener(\"abort-upload\", abort_listener);\n        };\n        document.addEventListener(\"abort-upload\", abort_listener)\n        xhr.setRequestHeader(\"Authorization\", jwt);\n        xhr.send(formdata);\n    }\n    const downloadFile = (fitem) => {\n        let xhr = new XMLHttpRequest();\n        xhr.open('GET', \"/api/fobject/file/download/\" + fitem._id, true);\n        xhr.responseType = \"blob\";\n        xhr.onload = () => {\n            let item_uri = URL.createObjectURL(xhr.response);\n            let fileLink = document.createElement('a');\n            fileLink.href = item_uri;\n            fileLink.download = fitem.name;\n            fileLink.click();\n            dispatch(setDownloadValue({ fid: fitem._id, value: 0 }));\n            let sid = enqueueSnackbar(\"download complete\", { variant: \"success\" });\n            setTimeout(() => closeSnackbar(sid), 1000);\n        };\n        xhr.onprogress = function (evt) {\n            if (evt.lengthComputable) {\n                let progress = Math.ceil((evt.loaded / evt.total) * 100);\n                dispatch(setDownloadValue({ fid: fitem._id, value: progress }));\n            }\n        };\n        xhr.onabort = (e) => {\n            let sid = enqueueSnackbar(\"download aborted\", { variant: \"warning\" });\n            setTimeout(() => closeSnackbar(sid), 1000);\n            dispatch(setDownloadValue({ fid: fitem._id, value: 0 }));\n        };\n        let abort_listener = (e) => {\n            xhr.abort();\n            document.removeEventListener(`abort-download-${fitem._id}`, abort_listener);\n        };\n        document.addEventListener(`abort-download-${fitem._id}`, abort_listener)\n        xhr.setRequestHeader(\"Authorization\", jwt);\n        xhr.send();\n    }\n    useEffect(() => {\n        if (jwt === null)\n            navigate(\"/login\");\n        else\n            dispatch(get_fobject_list())\n    }, []);\n    useEffect(() => {\n        setChipFiles(files.map(f => f.name));\n    }, [files]);\n    useEffect(() => {\n        if (chipFiles.length < files.length) {\n            let new_files = files.filter(x => {\n                if (chipFiles.includes(x.name))\n                    return x;\n            })\n            setFiles(new_files);\n        }\n    }, [chipFiles]);\n    useEffect(() => {\n        setChipData([]);\n        setModalData({ name: \"\", public: false });\n        setModalType(\"\")\n        setModalStyle(style);\n        setFiles([]);\n        setChipFiles([]);\n        setUploadValue(0);\n        toggleModal(false);\n        let checked_count = 0;\n        fobjects.forEach(x => x.checked && checked_count++)\n        if (checked_count)\n            toggleSelectMode(true);\n        else\n            toggleSelectMode(false);\n    }, [fobjects]);\n    return (\n        <>\n            <AppBar position=\"sticky\">\n                <Toolbar sx={{ backgroundColor: \"background.secondary\" }} >\n                    <IconButton onClick={handleBackPress}>\n                        <Icon>\n                            keyboard_backspace\n                        </Icon>\n                    </IconButton>\n                    <Breadcrumbs sx={{ marginLeft: \"20px\" }} aria-label=\"breadcrumb\" separator=\"/\">\n                        {\n                            current_path === \"/\" ?\n                                <Typography color=\"text.primary\">/</Typography> :\n                                current_path.split(\"/\").map((p, i) => {\n                                    if (i === 0) {\n                                        p = <Typography mt={0.9}>\n                                            <Icon fontSize=\"small\">home</Icon>\n                                        </Typography>\n                                    }\n                                    else if (p === \"\") {\n                                        p = <Typography mt={0.9}>\n                                            <Icon fontSize=\"small\">keyboard_double_arrow_right</Icon>\n                                        </Typography>\n                                    }\n\n                                    return (\n                                        <Link\n                                            onDragOver={(e) => { e.preventDefault() }}\n                                            onDrop={(e) => { handle_move_by_name(e.dataTransfer.getData(\"fid\"), i) }}\n                                            key={i}\n                                            underline=\"hover\"\n                                            color=\"inherit\"\n                                            style={{ cursor: \"pointer\" }}\n                                            onClick={(e) => {\n                                                handleChangeDir(i);\n                                            }}\n                                        >\n                                            {p}\n                                        </Link>\n                                    );\n\n                                })\n                        }\n\n                    </Breadcrumbs>\n                    <Box sx={{ flexGrow: 1 }}></Box>\n                    {\n                        selectMode &&\n                        <IconButton\n                            onClick={() => { toggleSelectMode(false); dispatch(unSelectAllItems()) }}\n                        >\n                            <Icon>\n                                disabled_by_default\n                            </Icon>\n                        </IconButton>\n                    }\n                    <IconButton\n                        onClick={() => {\n                            setModalType(\"New Folder\")\n                            toggleModal(true);\n                        }}\n                    >\n                        <Icon>\n                            create_new_folder\n                        </Icon>\n                    </IconButton>\n                    <IconButton onClick={() => {\n                        setModalType(\"Upload Files\")\n                        toggleModal(true);\n                    }}>\n                        <Icon>\n                            upload_file\n                        </Icon>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Modal\n                open={modal}\n                onClose={(e) => {\n                    if (modalType === \"Upload Files\" && uploadValue !== 0) {\n                        enqueueSnackbar(`upload already in progress`, {\n                            variant: \"warning\", action: (key) => (\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"error\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        document.dispatchEvent(new Event(\"abort-upload\"));\n                                        closeSnackbar(key);\n                                    }}\n                                >cancel upload\n                                </Button>\n                            ),\n                            persist: true,\n                        })\n                    }\n                    toggleModal(false)\n                }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Paper\n                    sx={modalStyle}\n                    onDragOver={(e) => {\n                        e.preventDefault();\n                        if (modalType === \"Upload Files\")\n                            setModalStyle({ ...modalStyle, border: \"2px dashed red\" });\n                    }}\n                    onDragLeave={(e) => {\n                        e.preventDefault();\n                        if (modalType === \"Upload Files\")\n                            setModalStyle({ ...modalStyle, border: \"2px solid white\" });\n                    }}\n                    onDrop={(e) => {\n                        e.preventDefault();\n\n                        if (modalType === \"Upload Files\") {\n                            let new_files = [...e.dataTransfer.files];\n                            let found = new_files.findIndex(x => {\n                                if (files.map(f => f.name).includes(x.name))\n                                    return true;\n                            });\n                            if (found != -1) {\n                                let sid = enqueueSnackbar(\"can't upload 2 file with same name\", { variant: \"warning\" });\n                                setTimeout(() => {\n                                    closeSnackbar(sid);\n                                }, 1000);\n                            } else {\n                                setFiles([...files, ...new_files])\n                                setModalStyle({ ...modalStyle, border: \"2px solid white\" });\n                            }\n                        }\n                    }}\n                >\n                    <IconButton\n                        sx={{ color: \"red\" }}\n                        onClick={(e) => {\n                            if (modalType === \"Upload Files\" && uploadValue !== 0) {\n                                enqueueSnackbar(\"upload already in progress\", {\n                                    variant: \"warning\", action: (key) => (\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"error\"\n                                            size=\"small\"\n                                            onClick={() => {\n                                                document.dispatchEvent(new Event(\"abort-upload\"));\n                                                closeSnackbar(key);\n                                            }}\n                                        >cancel upload\n                                        </Button>\n                                    ),\n                                    persist: true\n                                })\n                            }\n                            toggleModal(false)\n                        }}\n                    >\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography id=\"modal-modal-title\" sx={{ textAlign: \"center\" }} variant=\"h6\" component=\"h2\">\n                        {modalType}\n                    </Typography>\n                    <Box sx={{ p: 4 }}>\n                        {\n                            modalType === \"Upload Files\" &&\n                            (\n                                <>\n                                    <FormControl sx={{ width: \"100%\" }}>\n                                        <ChipsArray\n                                            InputElement={\n                                                <FormControl sx={{ width: \"100%\" }}>\n                                                    <input id=\"select-file-input\" onChange={onSelectFile} type=\"file\" style={{ display: \"none\" }} multiple />\n                                                    <label\n                                                        htmlFor=\"select-file-input\"\n                                                    >\n\n                                                        <Button variant=\"outlined\" component=\"span\" style={{ width: \"100%\" }}>Select File</Button>\n                                                    </label>\n                                                </FormControl>\n                                            }\n                                            chipData={chipFiles}\n                                            setChipData={setChipFiles}\n                                            itemPlaceholder=\"files\"\n                                        />\n\n                                    </FormControl>\n                                </>\n                            )\n                        }\n                        {\n                            modalType === \"New Folder\" &&\n                            <FormControl sx={{ width: \"100%\" }}>\n                                <Input\n                                    placeholder=\"name\"\n                                    onChange={e => setModalData({ ...modalData, name: e.target.value })}\n                                    sx={{ marginTop: \"20px\" }}\n                                    startAdornment={<Icon sx={{ marginRight: \"20px\" }}>folder</Icon>}\n                                />\n                            </FormControl>\n                        }\n                        <FormControl sx={{ width: \"100%\", marginTop: \"20px\" }}>\n                            <ChipsArray\n                                startAdornment={<Icon sx={{ marginRight: \"20px\" }}>person_add</Icon>}\n                                itemPlaceholder=\"access list\"\n                                placeholder=\"username to access\"\n                                chipData={chipData}\n                                setChipData={setChipData} />\n                        </FormControl>\n                        {\n                            modalType !== \"Change Access\" &&\n                            <FormControlLabel\n                                sx={{ marginTop: \"10px\", marginLeft: \"2px\" }}\n                                label=\"public\"\n                                control={<>\n                                    <Icon>folder_shared</Icon>\n                                    <Checkbox\n                                        onChange={e => setModalData({ ...modalData, public: e.target.checked })}\n                                    />\n                                </>\n                                }\n                            >\n                            </FormControlLabel>\n                        }\n                        <FormControl sx={{ width: \"100%\" }}>\n                            {\n                                uploadValue === 0 ?\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"success\"\n                                        sx={{ margin: \"20px auto\", width: \"100%\" }}\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            if (modalType === \"Change Access\") {\n                                                let params = { fid: modalData.name, access: chipData };\n                                                dispatch(change_access(params));\n                                                toggleModal(false);\n                                            } else if (modalType === \"Upload Files\") {\n                                                uploadFileHandler();\n                                            } else if (modalType === \"New Folder\") {\n                                                let params = { ...modalData };\n                                                params.parent = parent;\n                                                if (chipData.length !== 0)\n                                                    params.access = chipData;\n                                                if (fobjects.findIndex(x => x.name === params.name) === -1) {\n                                                    dispatch(create_folder(params));\n                                                    toggleModal(false);\n                                                } else {\n                                                    let sid = enqueueSnackbar(\"this folder already exist !\", { variant: \"error\" });\n                                                    setTimeout(() => {\n                                                        closeSnackbar(sid);\n                                                    }, 1000);\n                                                }\n                                            }\n                                        }}\n                                    >\n                                        {\n                                            uploadValue !== 0 ? \"Cancel Upload\" :\n                                                modalType === \"Change Access\" ? \"save\" :\n                                                    modalType === \"New Folder\" ? \"create\" :\n                                                        modalType === \"Upload Files\" ? \"upload\" : \"\"\n                                        }\n                                    </Button> :\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"error\"\n                                        sx={{ margin: \"20px auto\", width: \"100%\" }}\n                                        onClick={() => {\n                                            document.dispatchEvent(new Event(\"abort-upload\"));\n                                        }}\n                                    >\n                                        cancel upload\n                                    </Button>\n                            }\n                            {\n                                modalType === \"Upload Files\" && uploadValue !== 0 &&\n                                <FormControl sx={{ width: \"100%\" }}>\n                                    <LinearProgress variant=\"determinate\" value={uploadValue} />\n                                </FormControl>\n                            }\n                        </FormControl>\n                    </Box>\n                </Paper>\n            </Modal>\n            <Grid container sx={{ color: \"text.primary\" }}>\n\n                {fobjects.map(f => {\n                    return (\n                        <Grid\n                            key={f._id} item xl={3} lg={4} sm={6} xs={12} sx={{ padding: \"10px\" }}>\n                            <Card\n                                onDragStart={(ev) => {\n                                    ev.dataTransfer.setData(\"fid\", f._id);\n                                    ev.dataTransfer.effectAllowed = \"move\";\n                                }}\n                                onDragOver={(ev) => {\n                                    if (f.ftype === 1) {\n                                        ev.preventDefault();\n                                    }\n                                }}\n                                onDrop={(ev) => {\n                                    let data = ev.dataTransfer.getData(\"fid\");\n                                    handle_move(data, f._id);\n                                }}\n                                draggable={true}\n                                sx={{ width: \"100%\", borderRadius: \"10px\", backgroundColor: \"background.primary\" }}\n                            >\n                                <CardHeader\n                                    avatar={\n                                        <Avatar\n                                            onClick={() => {\n                                                if (selectMode) {\n                                                    dispatch(toggleSelectItem({ fid: f._id }))\n                                                } else {\n                                                    if (f.ftype === 0) {\n                                                        if (f.downloadValue !== 0)\n                                                            document.dispatchEvent(new Event(`abort-download-${f._id}`));\n                                                        else\n                                                            downloadFile(f);\n                                                    }\n                                                    else\n                                                        dispatch(cd(f._id))\n                                                }\n                                            }}\n                                            sx={{ bgcolor: \"text.primary\", cursor: \"pointer\" }} aria-label=\"recipe\">\n                                            {f.downloadValue !== 0 ?\n                                                (\n                                                    <>\n                                                        <CircularProgress variant=\"determinate\" value={f.downloadValue} sx={{ position: \"absolute\", color: \"background.default\" }} />\n                                                        <Icon>close</Icon>\n                                                    </>\n                                                ) :\n                                                (<Icon>{f.checked ? \"check\" : f.ftype === 0 ? \"description\" : f.ftype === 1 ? (f.public ? \"share\" : (f.owner === user._id ? \"folder\" : \"folder_shared\")) : \"question_mark\"}</Icon>)\n                                            }\n                                        </Avatar>\n                                    }\n                                    action={\n                                        <>\n                                            <IconButton\n                                                onClick={(e) => {\n                                                    setAnchorEl(e.target);\n                                                    dispatch(toggleMenuItem({ fid: f._id }));\n                                                }}\n                                                aria-label=\"settings\">\n                                                <Icon>more_vert</Icon>\n                                            </IconButton>\n                                            <Menu\n                                                anchorEl={anchorEl}\n                                                open={f.menu}\n                                                onClose={() => dispatch(toggleMenuItem({ fid: f._id }))}\n                                            >\n                                                <MenuItem\n                                                    onClick={(e) => handleChangeAccess(f)}\n                                                    sx={{ padding: \"10px\" }}>\n                                                    <Icon>lock_open</Icon>\n                                                    <Typography sx={{ marginLeft: 2 }}>\n                                                        access control\n                                                    </Typography>\n                                                </MenuItem>\n                                                <MenuItem sx={{ padding: \"10px\" }}\n                                                    onClick={() => {\n                                                        dispatch(toggle_public_access({ fid: f._id }))\n                                                    }}\n                                                >\n                                                    <Icon>share</Icon>\n                                                    <Typography sx={{ marginLeft: 2 }}>\n                                                        share folder\n                                                    </Typography>\n                                                </MenuItem>\n                                                <MenuItem\n                                                    onClick={() => {\n                                                        dispatch(toggleSelectItem({ fid: f._id }))\n                                                        dispatch(toggleMenuItem({ fid: f._id }))\n                                                    }}\n                                                    sx={{ padding: \"10px\" }}>\n                                                    <Icon>check_box</Icon>\n                                                    <Typography sx={{ marginLeft: 2 }}>\n                                                        select\n                                                    </Typography>\n                                                </MenuItem>\n                                                <MenuItem\n                                                    onClick={() => {\n                                                        dispatch(remove_fobject({ fid: f._id }))\n                                                    }}\n                                                    sx={{ padding: \"10px\" }}>\n                                                    <Icon>delete</Icon>\n                                                    <Typography sx={{ marginLeft: 2 }}>\n                                                        remove\n                                                    </Typography>\n                                                </MenuItem>\n                                            </Menu>\n                                        </>\n                                    }\n                                    title={f.name}\n                                    subheader={f.createdAt}\n                                />\n                            </Card>\n                        </Grid>\n                    )\n                })\n                }\n\n            </Grid>\n        </>\n    )\n}","import { Button, FormControl, Icon, Input, Paper, Typography, TextField, CircularProgress } from \"@mui/material\";\nimport { register, verify as verifyAction } from \"../Redux/RequestSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/system\";\nexport default function Register() {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const serverResponse = useSelector(state => state.request.response);\n    const [verify, setVerify] = useState({ state: false, code: null });\n    const [requested, setRequested] = useState(false);\n    const [data, setData] = useState({ name: '', username: '', password: '', email: '' });\n    useEffect(() => {\n        console.log(serverResponse);\n        if (!verify.state && serverResponse.ok) {\n            setVerify({ state: true, code: null });\n        } else if (!verify.state && !serverResponse.ok) {\n            setRequested(false);\n        }\n    }, [serverResponse]);\n    useEffect(() => {\n        setVerify({ state: false, code: null });\n        setData({ name: '', username: '', password: '', email: '' });\n        setRequested(false);\n    }, [])\n    return (\n        <Paper elevation={24} sx={{ margin: \"10vh auto\", width: \"fit-content\" }}>\n            <Typography variant=\"h2\" sx={{ textAlign: \"center\", padding: \"40px 0 0 0\" }}>\n                Register\n            </Typography>\n            <Box sx={{ width: \"25vw\", margin: \"0 auto\", padding: \"20px 30px 0 30px\" }}>\n                {!verify.state ? <>\n                    <FormControl\n                        sx={{ width: \"100%\" }}\n                    >\n                        <Input\n                            placeholder=\"name\"\n                            sx={{ marginTop: \"20px\" }}\n                            onChange={e => setData({ ...data, name: e.target.value })}\n                            startAdornment={<Icon sx={{ marginRight: \"20px\" }}>badge</Icon>}\n                        />\n                    </FormControl>\n                    <FormControl\n                        sx={{ width: \"100%\" }}\n                    >\n                        <Input\n                            placeholder=\"username\"\n                            sx={{ marginTop: \"10px\" }}\n                            onChange={e => setData({ ...data, username: e.target.value })}\n                            startAdornment={<Icon sx={{ marginRight: \"20px\" }}>person</Icon>}\n                        />\n                    </FormControl>\n                    <FormControl\n                        sx={{ width: \"100%\" }}\n                    >\n                        <Input\n                            placeholder=\"email\"\n                            sx={{ marginTop: \"10px\" }}\n                            onChange={e => setData({ ...data, email: e.target.value })}\n                            startAdornment={<Icon sx={{ marginRight: \"20px\" }}>mail</Icon>}\n                        />\n                    </FormControl>\n                    <FormControl\n                        sx={{ width: \"100%\" }}\n                    >\n\n                        <Input\n                            type=\"password\"\n                            placeholder=\"password\"\n                            sx={{ marginTop: \"10px\" }}\n                            onChange={e => setData({ ...data, password: e.target.value })}\n                            startAdornment={<Icon sx={{ marginRight: \"20px\" }}>key</Icon>}\n                        />\n                    </FormControl>\n                    <FormControl\n                        sx={{ width: \"100%\" }}\n                    >\n                        {requested ?\n                            <Button\n                                variant=\"contained\"\n                                sx={{ margin: \"30px auto 0 auto\", width: \"50%\" }}\n                            >\n                                <CircularProgress color=\"secondary\" />\n                            </Button>\n                            : <Button\n                                variant=\"contained\"\n                                sx={{ margin: \"30px auto 0 auto\", width: \"50%\" }}\n                                onClick={e => {\n                                    setRequested(true);\n                                    dispatch(register(data));\n                                }}\n                            >\n                                register\n                            </Button>\n\n                        }\n                    </FormControl>\n                    <FormControl\n                        sx={{ width: \"100%\" }}\n                    >\n                        <Button\n                            sx={{ margin: \"20px auto\", width: \"50%\" }}\n                            onClick={e => navigate(\"/login\")}\n                        >\n                            have account?\n                        </Button>\n                    </FormControl>\n                </> :\n                    <>\n                        <FormControl\n                            sx={{ width: \"100%\" }}\n                        >\n                            <TextField\n                                label=\"activation code\"\n                                sx={{ marginTop: \"10px\" }}\n                                onChange={e => setVerify({ ...verify, code: e.target.value })}\n                            />\n                        </FormControl>\n                        <FormControl\n                            sx={{ width: \"100%\" }}\n                        >\n                            <Button\n                                variant=\"contained\"\n                                sx={{ margin: \"30px auto\", width: \"50%\" }}\n                                onClick={e => dispatch(verifyAction({ username: data.username, code: verify.code }))}\n                            >\n                                Verify\n                            </Button>\n                        </FormControl>\n                    </>\n                }\n\n            </Box>\n        </Paper >\n    )\n}","import { Button, FormControl, Icon, Input, Paper, Typography } from \"@mui/material\";\nimport { login } from \"../Redux/RequestSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box } from \"@mui/system\";\nimport React,{ useState } from \"react\";\nexport default function Login() {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [data, setData] = useState({ username: \"\", password: \"\" });\n    return (\n        <Paper elevation={24} sx={{ margin: \"10vh auto\", width: \"fit-content\" }} spacing={12}>\n            <Typography variant=\"h2\" sx={{ textAlign: \"center\", padding: \" 40px 0 0 0\" }}>\n                Login\n            </Typography>\n            <Box sx={{ width: \"25vw\", margin: \"0 auto\", padding: \"0 30px\" }}>\n                <FormControl\n                    sx={{ width: \"100%\" }}\n                >\n                    <Input\n                        placeholder=\"username\"\n                        onChange={e=>setData({...data,username:e.target.value})}\n                        sx={{ marginTop: \"50px\" }}\n                        startAdornment={<Icon sx={{marginRight:\"20px\"}}>person</Icon>}\n                    />\n                </FormControl>\n                <FormControl\n                    sx={{ width: \"100%\" }}\n                >\n                    <Input\n                        type=\"password\"\n                        onChange={e=>setData({...data,password:e.target.value})}\n                        placeholder=\"password\"\n                        sx={{ marginTop: \"20px\" }}\n                        startAdornment={<Icon sx={{marginRight:\"20px\"}}>key</Icon>}\n                    />\n                </FormControl>\n                <FormControl\n                    sx={{ width: \"100%\" }}\n                >\n                    <Button\n                        variant=\"contained\"\n                        sx={{ margin: \"50px auto 0 auto\", width: \"50%\" }}\n                        onClick={e => dispatch(login(data))}\n                    >\n                        Login\n                    </Button>\n                </FormControl>\n                <FormControl\n                    sx={{ width: \"100%\" }}\n                >   <Button\n                    sx={{ margin: \"20px auto\", width: \"50%\" }}\n                    onClick={e => navigate(\"/register\")}\n                >\n                        or register ?\n                    </Button>\n                </FormControl>\n            </Box>\n        </Paper >\n    )\n}","import { createSlice } from '@reduxjs/toolkit'\n\nexport const userManagementSlice = createSlice({\n    name: 'users',\n    initialState: { data: [] },\n    reducers: {\n        setUsers: (state, action) => {\n            state.data = action.payload;\n        },\n        checkUser: (state, action) => {\n            state.data = state.data.map(x => {\n                if (x.username === action.payload.username)\n                    x.checked = action.payload.value;\n                return x;\n            })\n        }, checkAllUser: (state, action) => {\n            state.data = state.data.map(x => { return { ...x, checked: action.payload.value } });\n        }\n    }\n})\n\nexport const { setUsers, checkUser,checkAllUser } = userManagementSlice.actions\n\nexport default userManagementSlice.reducer","import { Button, ButtonGroup, Checkbox, Container, Fab, FormControl, FormControlLabel, FormLabel, Icon, IconButton, Input, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { add_user, edit_user, list_user, remove_user } from \"../Redux/RequestSlice\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport React, { useState, useEffect } from \"react\";\nimport { setUsers, checkUser, checkAllUser } from \"../Redux/UserManagementSlice\";\n\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    color: 'text.default',\n    border: '1px solid white',\n    borderRadius: \"15px\",\n    p: 4,\n};\n\nexport default function UserManagement() {\n    let dispatch = useDispatch();\n    let rows = useSelector(store => store.users.data);\n    const [saveModal, setSaveModal] = useState(false);\n    const [currentUser, setCurrnetUser] = useState({\n        identifier: null,\n        data: {\n            name: '',\n            username: '',\n            password: '',\n            email: '',\n            verify: false\n        }\n    });\n    const [modalType, setModalType] = useState(\"edit\");\n    const [removeBtn, setRemoveBtn] = useState(false);\n    const [selectAll, setSelectAll] = useState(false);\n    useEffect(() => {\n        dispatch(list_user());\n    }, []);\n    useEffect(() => {\n        setSaveModal(false);\n        setCurrnetUser({\n            identifier: null,\n            data: {\n                name: '',\n                username: '',\n                password: '',\n                email: '',\n                verify: false\n            }\n        });\n        setModalType(\"edit\");\n        \n        let checked_count = 0;\n        rows.forEach(x => x.checked && checked_count++);\n        if (checked_count === rows.length)\n            setSelectAll(true);\n        else\n            setSelectAll(false);\n        if (checked_count !== 0)\n            setRemoveBtn(true);\n        else\n            setRemoveBtn(false);\n    }, [rows]);\n\n    const chagneCheck = (item) => {\n        let checked_count = 0;\n        rows.forEach(x => {\n            if (x.username === item.username)\n                dispatch(checkUser({ username: x.username, value: !x.checked }));\n            if (x.checked)\n                checked_count += 1;\n            return x;\n        });\n\n        setRemoveBtn(checked_count !== 0)\n    };\n    const checkAll = (e) => {\n        if (!selectAll) {\n            dispatch(checkAllUser({ value: true }));\n        } else {\n            dispatch(checkAllUser({ value: false }));\n        }\n    };\n    const handleSaveModal = (e) => {\n        if (modalType === \"New\") {\n            dispatch(add_user(currentUser.data));\n        } else if (modalType === \"Edit\") {\n            let edited = {}\n            let actual_user_index = rows.findIndex(x => x.username === currentUser.identifier)\n            let actual_user = rows[actual_user_index];\n            for (let i in actual_user) {\n                if (actual_user[i] !== currentUser.data[i]) {\n                    edited[i] = currentUser.data[i];\n                }\n            }\n            edited.uid = currentUser.identifier;\n            dispatch(edit_user(edited));\n        }\n    };\n    const handleRemoveItem = (e) => {\n        let selected_users = rows.filter(x => x.checked).map(x => x.username);\n        dispatch(remove_user({ usernames: selected_users }));\n    };\n    return (<div>\n        <>\n            <Fab\n                onClick={() => {\n                    setModalType(\"New\");\n                    setCurrnetUser({\n                        identifier: null,\n                        data: {\n                            name: '',\n                            username: '',\n                            password: '',\n                            email: '',\n                            verify: false\n                        }\n                    });\n                    setSaveModal(true);\n                }}\n                color=\"secondary\"\n                sx={{\n                    position: \"fixed\",\n                    right: \"30px\",\n                    bottom: \"30px\"\n                }}\n            >\n                <Icon>person_add</Icon>\n            </Fab>\n            {removeBtn &&\n                <Fab\n                    onClick={handleRemoveItem}\n                    color=\"error\"\n                    sx={{\n                        position: \"fixed\",\n                        right: \"30px\",\n                        bottom: \"100px\"\n                    }}\n                >\n                    <Icon>delete_forever</Icon>\n                </Fab>\n            }\n\n            <Modal\n                open={saveModal}\n                onClose={(e) => { setSaveModal(false) }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Paper sx={style}>\n                    <IconButton\n                        sx={{ color: \"red\" }}\n                        onClick={(e) => { setSaveModal(false) }}\n                    >\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography id=\"modal-modal-title\" sx={{ textAlign: \"center\" }} variant=\"h6\" component=\"h2\">\n                        {modalType} User\n                    </Typography>\n                    <Box sx={{ p: 4 }}>\n                        <FormControl\n                            sx={{ width: \"100%\" }}\n                        >\n                            <Input\n                                placeholder=\"name\"\n                                value={currentUser.data.name}\n                                onChange={e => setCurrnetUser({ ...currentUser, data: { ...currentUser.data, name: e.target.value } })}\n                                sx={{ marginTop: \"20px\" }}\n                                startAdornment={<Icon sx={{mr:2}}>badge</Icon>}\n                            />\n                        </FormControl>\n                        <FormControl\n                            sx={{ width: \"100%\" }}\n                        >\n                            <Input\n                                placeholder=\"username\"\n                                value={currentUser.data.username}\n                                onChange={e => setCurrnetUser({ ...currentUser, data: { ...currentUser.data, username: e.target.value } })}\n                                sx={{ marginTop: \"10px\" }}\n                                startAdornment={<Icon sx={{mr:2}}>person</Icon>}\n                            />\n                        </FormControl>\n                        <FormControl\n                            sx={{ width: \"100%\" }}\n                        >\n                            <Input\n                                placeholder=\"email\"\n                                value={currentUser.data.email}\n                                onChange={e => setCurrnetUser({ ...currentUser, data: { ...currentUser.data, email: e.target.value } })}\n                                sx={{ marginTop: \"10px\" }}\n                                startAdornment={<Icon sx={{mr:2}}>mail</Icon>}\n                            />\n                        </FormControl>\n                        <FormControl\n                            sx={{ width: \"100%\" }}\n                        >\n\n                            <Input\n                                type=\"password\"\n                                placeholder=\"password\"\n                                sx={{ marginTop: \"10px\" }}\n                                value={currentUser.data.password}\n                                onChange={e => setCurrnetUser({ ...currentUser, data: { ...currentUser.data, password: e.target.value } })}\n                                startAdornment={<Icon sx={{mr:2}}>key</Icon>}\n                            />\n                        </FormControl>\n                        <FormControlLabel\n                            sx={{ marginTop: \"10px\", marginLeft: \"10px\" }}\n                            label=\"verify\"\n                            control={<>\n                                <Icon>verified</Icon>\n                                <Checkbox\n                                    checked={currentUser.data.verify}\n                                    onClick={e => setCurrnetUser({ ...currentUser, data: { ...currentUser.data, verify: !currentUser.data.verify } })}\n                                />\n                            </>\n                            }\n                        >\n                        </FormControlLabel>\n                        <FormControl\n                            sx={{ width: \"100%\" }}\n\n                        >\n\n                            <Button\n                                variant=\"contained\"\n                                color=\"success\"\n                                sx={{ margin: \"20px auto\", width: \"100%\" }}\n                                onClick={handleSaveModal}\n                            >\n                                save\n                            </Button>\n                        </FormControl>\n                    </Box>\n                </Paper>\n            </Modal>\n            <Container>\n                <TableContainer>\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>\n                                    <Checkbox\n                                        checked={selectAll}\n                                        onClick={() => { checkAll() }}\n                                        checkedIcon={(<Icon>indeterminate_check_box</Icon>)}\n                                    />\n                                </TableCell>\n                                <TableCell>name</TableCell>\n                                <TableCell>username</TableCell>\n                                <TableCell>email</TableCell>\n                                <TableCell>verified</TableCell>\n                                <TableCell>action</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map((row) => (\n                                <TableRow key={row.username} >\n                                    <TableCell>\n                                        <Checkbox checked={row.checked} onClick={(e) => chagneCheck(row)} />\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.name}\n                                    </TableCell>\n                                    <TableCell>{row.username}</TableCell>\n                                    <TableCell>{row.email}</TableCell>\n                                    <TableCell>{row.verify ? <Icon>check</Icon> : <Icon>close</Icon>} </TableCell>\n                                    <TableCell>\n                                        <ButtonGroup>\n                                            <Button size=\"small\" color=\"warning\" variant=\"contained\"\n                                                onClick={(e) => dispatch(remove_user({ usernames: [row.username] }))}\n                                            >\n                                                delete\n                                            </Button>\n                                            <Button size=\"small\" color=\"info\" variant=\"contained\"\n                                                onClick={() => {\n                                                    setModalType(\"Edit\");\n                                                    setCurrnetUser({ identifier: row.username, data: row });\n                                                    setSaveModal(true);\n                                                }}\n                                            >\n                                                edit\n                                            </Button>\n                                        </ButtonGroup>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n        </>\n    </div >);\n}","import { createSlice } from '@reduxjs/toolkit'\n\nlet theme = localStorage.getItem('theme') || 'light';\nexport const configSlice = createSlice({\n  name: 'config',\n  initialState: {\n    theme: theme,\n    sideMenu: false,\n  },\n  reducers: {\n    toggleTheme: (state) => {\n      state.theme = state.theme === \"dark\" ? \"light\" : \"dark\";\n      localStorage.setItem(\"theme\", state.theme);\n    },\n    toggleSideMenu: (state) => {\n      state.sideMenu = !state.sideMenu;\n    },\n  },\n})\n\nexport const { toggleTheme, toggleSideMenu } = configSlice.actions\n\nexport default configSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\nlet initialState = localStorage.getItem(\"user\") ? { data: JSON.parse(localStorage.getItem(\"user\")) } : {\n    data: {\n        _id: null,\n        name: null,\n        username: null,\n        email: null,\n        role: 0,\n    }\n};\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUser: (state, action) => {\n            if (action.payload === null) {\n                localStorage.removeItem(\"user\");\n                state.data = {\n                    _id: null,\n                    name: null,\n                    username: null,\n                    email: null,\n                    role: 0,\n                };\n                return;\n            }\n            let data = {\n                ...action.payload\n            };\n            if (data.hasOwnProperty(\"password\"))\n                delete data.password;\n            for (let k in data) {\n                state.data[k] = data[k];\n            }\n            localStorage.setItem(\"user\", JSON.stringify(state.data))\n        }\n    },\n})\n\nexport const { setUser } = userSlice.actions\n\nexport default userSlice.reducer","import { Button, Container, FormControl, Grid, Paper, TextField } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport default function Profile(props) {\n    const user = useSelector(store => store.user.data)\n    const [profileData, setProfileData] = useState({\n        name: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\"\n    });\n    useEffect(() => {\n        setProfileData({\n            ...user\n        });\n    }, [user])\n    return (\n        <Container>\n            <Grid container>\n                <Paper sx={{ margin: \"10vh auto\", padding: \"5vh 0\", width: \"60%\", display: \"flex\", alignItems: \"center\", flexDirection: \"column\" }}>\n                    <FormControl sx={{ width: \"80%\" ,mt:2}}>\n                        <TextField value={profileData.name} label=\"name\" onChange={(e) => { setProfileData({ ...profileData, name: e.target.value }) }} />\n                    </FormControl>\n                    <FormControl sx={{ width: \"80%\",mt:2 }}>\n                        <TextField value={profileData.username} label=\"username\" onChange={(e) => { setProfileData({ ...profileData, username: e.target.value }) }} />\n                    </FormControl>\n                    <FormControl sx={{ width: \"80%\",mt:2 }}>\n                        <TextField value={profileData.email} label=\"email\" onChange={(e) => { setProfileData({ ...profileData, email: e.target.value }) }} />\n                    </FormControl>\n                    <FormControl sx={{ width: \"80%\",mt:2 }}>\n                        <TextField value={profileData.password} label=\"password\" onChange={(e) => { setProfileData({ ...profileData, password: e.target.value }) }} />\n                    </FormControl>\n                    <FormControl sx={{ width: \"80%\",mt:2 }}>\n                        <Button>save</Button>\n                    </FormControl>\n                </Paper>\n            </Grid>\n        </Container>\n    )\n}","import { AppBar, CssBaseline, Divider, Drawer, IconButton, Link, List, ListItem, ListItemButton, ListItemIcon, Menu, MenuItem, Toolbar, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport Main from \"./Pages/Main\";\nimport Register from \"./Pages/Register\";\nimport Login from \"./Pages/Login\";\nimport UserManagement from \"./Pages/UserManagement\";\nimport Icon from '@mui/material/Icon';\nimport \"./App.css\"\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleTheme, toggleSideMenu } from \"./Redux/ConfigSlice\";\nimport { setJwt } from \"./Redux/RequestSlice\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport { setUser } from './Redux/UserSlice';\nimport Profile from './Pages/Profile';\n\nfunction App() {\n\tconst navigate = useNavigate();\n\tconst thm = useSelector(state => state.config.theme);\n\tconst sideMenu = useSelector(state => state.config.sideMenu);\n\tconst jwt = useSelector(state => state.request.jwt);\n\tconst role = useSelector(state => state.user.data.role);\n\tconst dispach = useDispatch();\n\tconst [anchorEl, setAnchorEl] = useState(null);\n\n\tconst handleMenu = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst profile = () => {\n\t\tnavigate(\"/profile\");\n\t\thandleClose();\n\t}\n\tconst logout = () => {\n\t\tdispach(setJwt(null));\n\t\tdispach(setUser(null));\n\t\tnavigate(\"/login\");\n\t\thandleClose();\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar position=\"sticky\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{jwt &&\n\t\t\t\t\t\trole === 2 ?\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={e => dispach(toggleSideMenu())}\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\t\tsx={{ mr: 2 }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon>menu</Icon>\n\t\t\t\t\t\t</IconButton> : \"\"\n\t\t\t\t\t}\n\t\t\t\t\t<Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\thref=\"/\"\n\t\t\t\t\t\t\tunderline=\"hover\"\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSmart Storage\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<IconButton color=\"inherit\" onClick={e => dispach(toggleTheme())}>\n\t\t\t\t\t\t<Icon>{thm === \"dark\" ? 'dark_mode' : 'light_mode'}</Icon>\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t{jwt ?\n\t\t\t\t\t\t<IconButton color=\"inherit\" onClick={e => handleMenu(e)}>\n\t\t\t\t\t\t\t<Icon>account_circle</Icon>\n\t\t\t\t\t\t</IconButton> : <></>\n\t\t\t\t\t}\n\t\t\t\t\t<Menu\n\t\t\t\t\t\tid=\"menu-appbar\"\n\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\tvertical: 'top',\n\t\t\t\t\t\t\thorizontal: 'right',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\ttransformOrigin={{\n\t\t\t\t\t\t\tvertical: 'top',\n\t\t\t\t\t\t\thorizontal: 'right',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem onClick={profile}>Profile</MenuItem>\n\t\t\t\t\t\t<MenuItem onClick={logout}>Logout</MenuItem>\n\t\t\t\t\t</Menu>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Drawer\n\t\t\t\tanchor=\"left\"\n\t\t\t\topen={sideMenu}\n\t\t\t\tonClose={e => dispach(toggleSideMenu())}\n\t\t\t>\n\t\t\t\t<List>\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<IconButton onClick={e => dispach(toggleSideMenu())}>\n\t\t\t\t\t\t\t<Icon>chevron_left</Icon>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<ListItemButton\n\t\t\t\t\t\t\tonClick={e => navigate(\"/manage/user\")}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t<Icon>manage_accounts</Icon>\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\tuser management\n\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<ListItemButton\n\t\t\t\t\t\t\tonClick={e => navigate(\"/\")}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t<Icon>folder</Icon>\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\tfile management\n\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t</Drawer>\n\t\t\t<Box >\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path=\"/\" element={<Main />} />\n\t\t\t\t\t<Route path=\"profile\" element={<Profile />} />\n\t\t\t\t\t{role === 2 && <Route path=\"manage/user\" element={<UserManagement />} />}\n\t\t\t\t\t<Route path=\"login\" element={<Login />} />\n\t\t\t\t\t<Route path=\"register\" element={<Register />} />\n\t\t\t\t</Routes>\n\t\t\t</Box>\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from \"@mui/material/styles\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#0A1929\",\n            secondary:\"#33577d\",\n            primary:\"#02664b\",\n        },\n        text:{\n            primary:\"#fff\"\n        },\n    },\n});\n\nconst lightTheme = createTheme({\n    palette: {\n        mode: 'light',\n        background:{ \n            secondary:\"#49a9b8\",\n            primary:\"#5afacf\"\n        },\n    },\n});\n\nexport {\n    darkTheme,\n    lightTheme\n};","import { configureStore } from '@reduxjs/toolkit'\nimport cslice from './ConfigSlice'\nimport uslice from './UserSlice'\nimport umslice from './UserManagementSlice'\nimport rslice from './RequestSlice'\nimport sslice from './StorageSlice'\n\nexport default configureStore({\n    reducer: {\n        config: cslice,\n        user: uslice,\n        users: umslice,\n        request: rslice,\n        storage: sslice\n    }\n});","import { useSnackbar } from 'notistack';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { get_fobject_list, list_user, response, setJwt } from '../Redux/RequestSlice';\nimport { setFs } from '../Redux/StorageSlice';\nimport { setUsers } from \"../Redux/UserManagementSlice\";\nimport { setUser } from '../Redux/UserSlice';\n\nfunction RequestAdaptor() {\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const request = useSelector(state => state.request)\n    const dispatch = useDispatch()\n    const navigate = useNavigate();\n    useEffect(() => {\n        if (request != null && request.route !== \"\") {\n            let options = {\n                method: request.method,\n                headers: {\n                    \"content-type\": \"application/json\"\n                }\n            };\n            if (request.auth) {\n                options.headers.Authorization = request.jwt;\n            }\n            options.body = request.data ? JSON.stringify(request.data) : '';\n            fetch(request.route, options)\n                .then(res => res.json())\n                .then(res => {\n                    let snackbar_key = 0;\n                    dispatch(response(res));\n                    switch (request.route) {\n                        case \"/api/user/login\":\n                            if (res.ok) {\n                                snackbar_key = enqueueSnackbar(\"welcom\", { variant: \"success\" });\n                                dispatch(setJwt(res.data));\n                                dispatch(setUser(res.user));\n                                navigate(\"/\");\n                            }\n                            else\n                                snackbar_key = enqueueSnackbar(res.error, { variant: \"error\" });\n                            break;\n                        case \"/api/user/register\":\n                            if (res.ok) {\n                                snackbar_key = enqueueSnackbar(\"verify your mail address\", { variant: \"info\" });\n                                dispatch(setUser(request.data));\n                            }\n                            else\n                                snackbar_key = enqueueSnackbar(res.error, { variant: \"error\" });\n                            break;\n                        case \"/api/user/verify\":\n                            if (res.ok) {\n                                snackbar_key = enqueueSnackbar(\"your account verified successfully\", { variant: \"success\" });\n                                setTimeout(() => {\n                                    navigate(\"/login\");\n                                }, 4000);\n                            }\n                            else\n                                snackbar_key = enqueueSnackbar(res.error, { variant: \"error\" });\n                            break;\n                        case \"/api/user/list\":\n                            if (res.ok) {\n                                dispatch(setUsers(res.data.map(user => { return { ...user, checked: false } })));\n                            }\n                            else\n                                snackbar_key = enqueueSnackbar(res.error, { variant: \"error\" });\n                            break;\n                        case \"/api/user/add\":\n                            if (res.ok) {\n                                dispatch(list_user());\n                                snackbar_key = enqueueSnackbar(\"new user added successfully\", { variant: \"success\" });\n                            }\n                            else\n                                snackbar_key = enqueueSnackbar(res.error, { variant: \"error\" });\n                            break;\n                        case \"/api/user/edit\":\n                            if (res.ok) {\n                                dispatch(list_user());\n                                snackbar_key = enqueueSnackbar(\"user updated successfully\", { variant: \"success\" });\n                            }\n                            else\n                                snackbar_key = enqueueSnackbar(res.error, { variant: \"error\" });\n                            break;\n                        case \"/api/user/remove\":\n                            if (res.ok) {\n                                dispatch(list_user());\n                                snackbar_key = enqueueSnackbar(\"user deleted successfully\", { variant: \"success\" });\n                            }\n                            else\n                                snackbar_key = enqueueSnackbar(res.error, { variant: \"error\" });\n                            break;\n                        case \"/api/fobject/list\":\n                            if (res.ok) {\n                                dispatch(setFs(res.data));\n                            }\n                            else\n                                snackbar_key = enqueueSnackbar(res.error, { variant: \"error\" });\n                            break;\n                        case \"/api/fobject/remove\":\n                            if (res.ok) {\n                                dispatch(get_fobject_list());\n                                snackbar_key = enqueueSnackbar(\"item deleted successfully\", { variant: \"success\" });\n                            }\n                            else\n                                snackbar_key = enqueueSnackbar(res.error, { variant: \"error\" });\n                            break;\n                        case \"/api/fobject/folder/add\":\n                            if (res.ok) {\n                                dispatch(get_fobject_list());\n                                snackbar_key = enqueueSnackbar(\"new folder created successfully\", { variant: \"success\" });\n                            }\n                            else\n                                snackbar_key = enqueueSnackbar(res.error, { variant: \"error\" });\n                            break;\n                        case \"/api/fobject/access/public\":\n                            if (res.ok) {\n                                dispatch(get_fobject_list());\n                                snackbar_key = enqueueSnackbar(`public access ${res.data.public ? \"enabled\" : \"disabled\"}`, { variant: \"success\" });\n                            }\n                            else\n                                snackbar_key = enqueueSnackbar(res.error, { variant: \"error\" });\n                            break;\n                        case \"/api/fobject/access/change\":\n                            if (res.ok) {\n                                dispatch(get_fobject_list());\n                                snackbar_key = enqueueSnackbar(`changing access success`, { variant: \"success\" });\n                            }\n                            else\n                                snackbar_key = enqueueSnackbar(res.error, { variant: \"error\" });\n                            break;\n                        case \"/api/fobject/move\":\n                            if (res.ok) {\n                                dispatch(get_fobject_list());\n                                snackbar_key = enqueueSnackbar(`moving items successfull`, { variant: \"success\" });\n                            }\n                            else\n                                snackbar_key = enqueueSnackbar(res.error, { variant: \"error\" });\n                            break;\n                        default:\n                            break;\n                    }\n                    if (snackbar_key !== 0)\n                        setTimeout(() => {\n                            closeSnackbar(snackbar_key);\n                        }, 3000);\n\n                })\n                .catch(e => console.log(e));\n        }\n    }, [request.route, request.data])\n    return (null);\n}\n\nexport default RequestAdaptor;","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { darkTheme, lightTheme } from './Theme';\nimport store from './Redux/Store'\nimport { ThemeProvider } from '@mui/material';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider, useSelector } from 'react-redux';\nimport { SnackbarProvider } from 'notistack';\nimport RequestAdaptor from './Services/RequestAdaptor';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nfunction Init() {\n  const [theme, setTheme] = useState(lightTheme);\n  let thm = useSelector(state => state.config.theme);\n  useEffect(() => {\n    if (thm === \"light\")\n      setTheme(lightTheme);\n    else if (thm === \"dark\")\n      setTheme(darkTheme);\n  }, [thm]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <SnackbarProvider maxSnack={3}>\n          <RequestAdaptor />\n          <App />\n        </SnackbarProvider>\n      </BrowserRouter>\n    </ThemeProvider >\n  );\n}\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Init />\n    </Provider>\n  </React.StrictMode>\n);\n\nreportWebVitals(console.log);\n"],"sourceRoot":""}